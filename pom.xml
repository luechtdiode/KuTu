<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.seidel</groupId>
	<artifactId>KuTu</artifactId>
	<version>2.2.1-SNAPSHOT</version>

	<inceptionYear>2014</inceptionYear>

	<profiles>
		<profile>
			<id>win</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<javafx.os>win</javafx.os>
				<bundler.os>Win64</bundler.os>
				<app.logo>app-logo.ico</app.logo>
			</properties>
		</profile>
		<profile>
			<id>osx</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<javafx.os>mac</javafx.os>
				<bundler.os>Darwin</bundler.os>
				<app.logo>AppIcon.icns</app.logo>
			</properties>
		</profile>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>
			<properties>
				<javafx.os>linux</javafx.os>
				<bundler.os>Linux</bundler.os>
				<app.logo>app-logo.png</app.logo>
			</properties>
		</profile>
	</profiles>

	<properties>
		<app.majorminor.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}</app.majorminor.version>
		<app.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</app.version>
		<!--<app.version>${project.version}</app.version>-->
		<buildDate>${maven.build.timestamp}</buildDate>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<jdk-home>${JAVA_HOME}</jdk-home>
		<scala.majorversion>2.12</scala.majorversion>
		<scala.version>${scala.majorversion}.11</scala.version>
		<akkaHttp.version>10.1.11</akkaHttp.version>
		<akka.version>2.6.4</akka.version>
		<javafx.version>16</javafx.version>
		<scalafx.version>12.0.2-R18</scalafx.version>
		<scalatest.version>3.1.0</scalatest.version>
		<maven-scala-plugin.version>3.4.1</maven-scala-plugin.version>
		<gatling.version>3.5.1</gatling.version>
		<gatling-plugin.version>3.0.0</gatling-plugin.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<scoverage.plugin.version>1.4.1</scoverage.plugin.version>
		<project-info-reports.plugin.version>3.0.0</project-info-reports.plugin.version>
		<site.plugin.version>3.7.1</site.plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>typesafe</id>
			<name>Typesafe - releases</name>
			<url>https://repo.typesafe.com/typesafe/releases/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url>https://oss.sonatype.org/content/groups/scala-tools</url>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<!--<pluginRepository>-->
			<!--<id>clojars</id>-->
			<!--<url>http://clojars.org/repo/</url>-->
		<!--</pluginRepository>-->
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scalafx</groupId>
			<artifactId>scalafx_${scala.majorversion}</artifactId>
			<version>${scalafx.version}</version>
		</dependency>

		<!-- for JDK11 relevant (not an option: javapackager is removed but needed) -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${javafx.version}</version>
			<classifier>${javafx.os}</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
			<classifier>${javafx.os}</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>${javafx.version}</version>
			<classifier>${javafx.os}</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
			<classifier>${javafx.os}</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${javafx.version}</version>
			<classifier>${javafx.os}</classifier>
		</dependency>

		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.30.1</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.12</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.slick</groupId>
			<artifactId>slick-hikaricp_2.12</artifactId>
			<version>3.3.2</version>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>3.4.2</version>
		</dependency>

		<!-- akka / akkahttp -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http_${scala.majorversion}</artifactId>
			<version>${akkaHttp.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-spray-json_${scala.majorversion}</artifactId>
			<version>${akkaHttp.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-xml_${scala.majorversion}</artifactId>
			<version>${akkaHttp.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-testkit_${scala.majorversion}</artifactId>
			<version>${akkaHttp.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-stream-testkit_${scala.majorversion}</artifactId>
			<version>${akka.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-stream_${scala.majorversion}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster_${scala.majorversion}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster-tools_${scala.majorversion}</artifactId>
			<version>${akka.version}</version>
		</dependency>

		<!-- Event Sourcing, Akka Persitence -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-persistence_${scala.majorversion}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.fusesource.leveldbjni</groupId>
			<artifactId>leveldbjni-all</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>chill-akka_${scala.majorversion}</artifactId>
			<version>0.9.5</version>
		</dependency>

		<!-- JWT -->
		<dependency>
			<groupId>com.jason-goodwin</groupId>
			<artifactId>authentikat-jwt_${scala.majorversion}</artifactId>
			<version>0.4.5</version>
		</dependency>

		<!-- Slick -->
		<dependency>
			<groupId>com.typesafe.slick</groupId>
			<artifactId>slick_${scala.majorversion}</artifactId>
			<version>3.3.2</version>
		</dependency>

		<!-- QRCode -->
		<dependency>
			<groupId>net.glxn</groupId>
			<artifactId>qrgen</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- proxy -->
		<dependency>
			<groupId>com.github.markusbernhardt</groupId>
			<artifactId>proxy-vole</artifactId>
			<version>1.0.5</version>
		</dependency>
        <!-- https://mvnrepository.com/artifact/org.javadelight/delight-nashorn-sandbox -->
        <dependency>
            <groupId>org.javadelight</groupId>
            <artifactId>delight-nashorn-sandbox</artifactId>
            <version>0.1.28</version>
        </dependency>

        <!-- dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-api</artifactId>
            <version>2.10.0</version> </dependency> <dependency> <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId> <version>2.10.0</version> </dependency>
            <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-nop</artifactId>
            <version>1.7.25</version> </dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-slf4j_${scala.majorversion}</artifactId>
			<version>${akka.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.10</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.8</version>
		</dependency>

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.majorversion}</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
	        <groupId>io.gatling.highcharts</groupId>
	        <artifactId>gatling-charts-highcharts</artifactId>
	        <version>${gatling.version}</version>
	        <scope>test</scope>
		</dependency>
	</dependencies>
	<!-- distributionManagement> <repository> <id>ftp-repository</id> <url>ftp://ftp.interpolar.ch/snapshots</url>
		</repository> </distributionManagement -->
	<distributionManagement>
		<site>
			<id>s3.site</id>
			<url>s3://rs-travis/kutuapp/site</url>
		</site>
		<repository>
			<id>s3.release</id>
			<url>s3://rs-travis/kutuapp/release</url>
		</repository>
		<snapshotRepository>
			<id>s3.snapshot</id>
			<url>s3://rs-travis/kutuapp/snapshot</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application.conf</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/application.conf</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
	        <plugin>
	            <groupId>io.gatling</groupId>
	            <artifactId>gatling-maven-plugin</artifactId>
                <version>${gatling-plugin.version}</version>
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<includes>
						<include>**/*Suite.class</include>
						<include>**/*Test.class</include>
						<include>**/*Tests.class</include>
						<include>**/*Spec.class</include>
						<include>**/*Specs.class</include>
					</includes>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<!--<shadedClassifierName>allinone</shadedClassifierName>-->
							<!--<minimizeJar>true</minimizeJar>-->
							<finalName>${project.artifactId}-${app.version}-app</finalName>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
							</artifactSet>
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>ch.seidel.kutu.KuTuApp</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>parse-version</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>${maven-scala-plugin.version}</version>
				<!--<version>3.4.2</version>-->
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<args>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-explaintypes</arg>
						<arg>-feature</arg>
						<arg>-language:implicitConversions</arg>
						<arg>-language:postfixOps</arg>
						<arg>-language:existentials</arg>
						<arg>-g:line</arg>
					</args>
					<jvmArgs>
						<jvmArg>-Xms64m</jvmArg>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- plugin> <artifactId>maven-dependency-plugin</artifactId> <version>2.10</version>
				<executions> <execution> <id>unpack-dependencies</id> <phase>package</phase>
				<goals> <goal>unpack-dependencies</goal> </goals> <configuration> <excludeScope>system</excludeScope>
				<excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds> <outputDirectory>${project.build.directory}/classes</outputDirectory>
				</configuration> </execution> </executions> </plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>package-jar</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${jdk-home}/bin/jpackager</executable>
							<arguments>
								<argument>create-installer</argument>
								<argument>--module-path</argument>
								<argument>${jdk-home}/jmods</argument>
								<argument>--class</argument>
								<argument>ch.seidel.kutu.KuTuApp</argument>
								<argument>--input</argument>
								<argument>${project.build.directory}</argument>
								<argument>--files</argument>
								<argument>${project.artifactId}-${app.version}-app.jar</argument>
								<argument>--output</argument>
								<argument>${project.build.directory}/${OS}</argument>
								<argument>--name</argument>
								<argument>TurnerWettkampf-App-v${parsedVersion.majorVersion}r${parsedVersion.minorVersion}</argument>
								<argument>--version</argument>
								<argument>${app.version}</argument>
								<argument>--main-jar</argument>
								<argument>${project.artifactId}-${app.version}-app.jar</argument>
								<argument>--icon</argument>
								<argument>${project.build.sourceDirectory}/../resources/images/${app.logo}</argument>
								<argument>--category</argument>
								<argument>Sport</argument>
								<argument>--copyright</argument>
								<argument>Interpolar</argument>
								<argument>--vendor</argument>
								<argument>Interpolar</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<!--  see https://stackoverflow.com/questions/20650514/upload-static-resource-to-amazon-s3-server-using-maven-plugin -->
					<serverId>s3.release</serverId>
					<url>s3://rs-travis/public/kutuapp/</url>
					<fromDir>${basedir}/target/${bundler.os}</fromDir>
					<includes>
						**/*.msi, **/*.pkg, **/*.dmg, **/*.rpm, **/*.deb
					</includes>
					<toDir>${project.version}/${bundler.os}</toDir>
				</configuration>
				<executions>
					<execution>
						<id>upload-binaries</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<fromDir>${basedir}/target/${bundler.os}</fromDir>
							<includes>
								**/*.msi, **/*.pkg, **/*.dmg, **/*.rpm, **/*.deb
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${site.plugin.version}</version>
			</plugin>
		</plugins>
		<extensions>
		</extensions>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${project-info-reports.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report> <!-- select only one report from: report, integration-report and report-only reporters -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
