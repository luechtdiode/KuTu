env:
  global:
    - OS=$(uname -s)
    - PATH=$HOME/.local/bin:$PATH
    - S3_BUCKET_CACHE=s3://rs-travis/kutuapp/build-cache
    - S3_BUCKET_REQUISITES=s3://rs-travis/kutuapp/requisites
    - S3_BUCKET_PUBLIC=s3://rs-travis/public/kutuapp

# aws permissions see https://stackoverflow.com/questions/38774798/accessdenied-for-listobjects-for-s3-bucket-when-permissions-are-s3

branches:
  except:
  - /^travisbuild-[0-9a-z\-]*/
      
# branches:
#   only:
#     - master
#     - v2-networked
  
cache:
  directories:
    - $HOME/.m2/repository
    - $HOME/.sbt
    - $HOME/.ivy2
    - $HOME/apache-maven-3.5.0
    
before_script:
  - mkdir -p $TRAVIS_BUILD_DIR/outputs/$OS
  
stages:
  - client
  - serverosx
  - serverlnx
  - serverwin

jobs:
  include:
  - stage: client
    language: node_js
    node_js: lts/*
    before_install:
      - npm install -g cordova ionic
      - pip install awscli --upgrade --user
      - ./ecr_credentials.sh
      - mkdir -p ~/$TRAVIS_BUILD_NUMBER
      - aws s3 sync $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER
      - mkdir -p ~/requisites
      - aws s3 sync $S3_BUCKET_REQUISITES ~/requisites
    script:
      - cd $TRAVIS_BUILD_DIR/client/resultcatcher
      - npm install
      - ionic build --prod
      - cp -R -f ./www ~/$TRAVIS_BUILD_NUMBER/
      - rm -rf ~/requisites
    after_success:
      - aws s3 sync ~/$TRAVIS_BUILD_NUMBER $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER

  - stage: serverosx
    language: java
    jdk: openjdk11
    os: osx
    # osx_image: xcode9.2
    before_install:
      - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
      - unzip awscli-bundle.zip
      - ./awscli-bundle/install -b ~/bin/aws
      # - brew install awscli
      - ./ecr_credentials.sh
      - ./prepare_jdk.sh
      - mkdir -p ~/$TRAVIS_BUILD_NUMBER
      - aws s3 sync $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER
    script:
      - cp -R -f ~/$TRAVIS_BUILD_NUMBER/www/* $TRAVIS_BUILD_DIR/src/main/resources/app
      - mvn clean package #deploy --settings deploy-settings.xml -Daws_default_region=eu-west-1
      - cp -f $TRAVIS_BUILD_DIR/target/*.jar $TRAVIS_BUILD_DIR/outputs/
      - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.dmg $TRAVIS_BUILD_DIR/outputs/$OS/
      - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.pkg $TRAVIS_BUILD_DIR/outputs/$OS/
      - aws s3 cp --recursive $TRAVIS_BUILD_DIR/outputs/ $S3_BUCKET_PUBLIC/
    after_success:
      - git checkout "$TRAVIS_BRANCH"
      - cp -R -f ~/$TRAVIS_BUILD_NUMBER/www/* $TRAVIS_BUILD_DIR/src/main/resources/app
      - git add $TRAVIS_BUILD_DIR/src/main/resources/app
      - git commit -a -m "update with generated Client from TravisCI for build $TRAVIS_BUILD_NUMBER with [skip ci]"
      - export GIT_TAG=travisbuild-$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d")-$TRAVIS_BUILD_NUMBER
      - git tag $GIT_TAG -a -m "TravisCI build $TRAVIS_BUILD_NUMBER"
      - if ! git push -fq --follow-tags https://$GH_ACCESS_TOKEN@github.com/luechtdiode/KuTu.git $TRAVIS_BRANCH > /dev/null 2>&1; then err "failed to push git changes"; return1; fi
      - aws s3 rm --recursive $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER # clean up after ourselves

  - stage: serverlnx
    language: java
    jdk: openjdk11
    os: linux

    before_install:
      - pip install awscli --upgrade --user
      - ./ecr_credentials.sh
      - ./prepare_jdk.sh
      - sudo apt-get install fakeroot
    script:
      - mvn clean package -DskipTest=true #deploy --settings deploy-settings.xml -Daws_default_region=eu-west-1
      - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.* $TRAVIS_BUILD_DIR/outputs/$OS/
      - aws s3 cp --recursive $TRAVIS_BUILD_DIR/outputs/ $S3_BUCKET_PUBLIC/

  - stage: serverwin
    os: windows
    language: sh

    install:
      - choco install awscli
      - choco install openjdk
      - choco install maven
      - choco install wixtoolset
      - choco install innosetup
      - ./ecr_credentials.sh
      - ./prepare_jdk.sh
      - mkdir -p ~/$TRAVIS_BUILD_NUMBER
    script:
      - mvn clean package -DskipTest=true #deploy --settings deploy-settings.xml -Daws_default_region=eu-west-1
      - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.* $TRAVIS_BUILD_DIR/outputs/$OS/
      - aws s3 cp --recursive $TRAVIS_BUILD_DIR/outputs/ $S3_BUCKET_PUBLIC/

# deploy: actually, deploy is managed by maven wagon
#   # deploy build to s3
#   - provider: s3
#     access_key_id: $aws_user
#     secret_access_key: $aws_accesskey
#     region: "eu-west-1"
#     bucket: "rs-travis"
#     local_dir: $TRAVIS_BUILD_DIR/outputs
#     upload_dir: kutuapp
#     skip_cleanup: true
#     on:
#       all_branches: true
      
#   - provider: releases
#     api_key: $GH_ACCESS_TOKEN
#     file_glob: true
#     file: $TRAVIS_BUILD_DIR/src/main/resources/app
#     skip_cleanup: true
#     on:
#       all_branches: true
#   #   on:
#   #     tags: true
