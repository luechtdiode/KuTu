env:
  global:
    - OS=$(uname -s)
    - PATH=$HOME/.local/bin:$PATH
    - S3_BUCKET_CACHE=s3://rs-travis/kutuapp/build-cache
    - S3_BUCKET_REQUISITES=s3://rs-travis/kutuapp/requisites
    - S3_BUCKET_PUBLIC=s3://rs-travis/public/kutuapp

# aws permissions see https://stackoverflow.com/questions/38774798/accessdenied-for-listobjects-for-s3-bucket-when-permissions-are-s3

branches:
  except:
    - /^travisbuild-[0-9a-z\-]*/

  # branches:
  #   only:
  #     - master
  #     - v2-networked

cache:
  directories:
    - $HOME/.m2/repository
    - $HOME/.sbt
    - $HOME/.ivy2
    - $HOME/apache-maven-3.5.0
    - $HOME/apache-maven-3.6.0

before_script:
  - mkdir -p $TRAVIS_BUILD_DIR/outputs/$OS

stages:
  - client
  - serverosx
  - serverlnx
  - serverwin

jobs:
  include:
    - stage: client
      language: node_js
      node_js: lts/*
      before_install:
        - npm install -g cordova ionic
        - pip install awscli --upgrade --user
        - ./ecr_credentials.sh >/dev/null 2>&1
        - mkdir -p ~/$TRAVIS_BUILD_NUMBER
        - aws s3 sync $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER >/dev/null 2>&1
        - mkdir -p ~/requisites
        - aws s3 sync $S3_BUCKET_REQUISITES ~/requisites >/dev/null 2>&1
      script:
        - cd $TRAVIS_BUILD_DIR/newclient/resultcatcher
        - npm install
        - ionic build --prod --engine=browser
        - cp -R -f ./www ~/$TRAVIS_BUILD_NUMBER/
        - rm -rf ~/requisites
      after_success:
        - git checkout "$TRAVIS_BRANCH" >/dev/null 2>&1
        - cp -R -f ~/$TRAVIS_BUILD_NUMBER/www/* $TRAVIS_BUILD_DIR/src/main/resources/app
        - git add $TRAVIS_BUILD_DIR/src/main/resources/app
        - git commit -a -m "update with generated Client from TravisCI for build $TRAVIS_BUILD_NUMBER with [skip ci]"
        - export GIT_TAG=travisbuild-client-$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d")-$TRAVIS_BUILD_NUMBER
        - git tag $GIT_TAG -a -m "TravisCI client build $TRAVIS_BUILD_NUMBER"
        - if ! git push -fq --follow-tags https://$GH_ACCESS_TOKEN@github.com/luechtdiode/KuTu.git $TRAVIS_BRANCH > /dev/null 2>&1; then err "failed to push git changes"; return1; fi
        - aws s3 sync ~/$TRAVIS_BUILD_NUMBER $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER >/dev/null 2>&1

    - stage: serverosx
      language: java
      # jdk: openjdk11
      os: osx
      #    #skips default install - see script bellow
      install: true

      # osx_image: Xcode 10.1//xcode9.2
      before_install:
        - export OS="Darwin"
        - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
        - unzip awscli-bundle.zip
        - ./awscli-bundle/install -b ~/bin/aws
        # - brew install awscli
        - ./ecr_credentials.sh >/dev/null 2>&1
        - source ./prepare_jdk.sh
        - mkdir -p ~/$TRAVIS_BUILD_NUMBER
        - aws s3 sync $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER >/dev/null 2>&1
        - export GIT_TAG=travisbuild-client-$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d")-$TRAVIS_BUILD_NUMBER
        - git checkout "$TRAVIS_BRANCH" >/dev/null 2>&1
        - git pull >/dev/null 2>&1
        - git reset $GIT_TAG --hard >/dev/null 2>&1
        - rm -rf $TRAVIS_BUILD_DIR/src/main/resources/app/*
        - cp -R -f ~/$TRAVIS_BUILD_NUMBER/www/* $TRAVIS_BUILD_DIR/src/main/resources/app
      script:
        - mvn clean package -q #deploy --settings deploy-settings.xml -Daws_default_region=eu-west-1
        - cp -f $TRAVIS_BUILD_DIR/target/*.jar $TRAVIS_BUILD_DIR/outputs/
        - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.dmg $TRAVIS_BUILD_DIR/outputs/$OS/
        - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.pkg $TRAVIS_BUILD_DIR/outputs/$OS/
        - aws s3 cp --recursive $TRAVIS_BUILD_DIR/outputs/ $S3_BUCKET_PUBLIC/ >/dev/null 2>&1
      after_success:
        - export GIT_TAG=travisbuild-$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d")-$TRAVIS_BUILD_NUMBER
        - git tag $GIT_TAG -a -m "TravisCI build $TRAVIS_BUILD_NUMBER"
        - if ! git push -fq --follow-tags https://$GH_ACCESS_TOKEN@github.com/luechtdiode/KuTu.git $TRAVIS_BRANCH > /dev/null 2>&1; then err "failed to push git changes"; return1; fi

    - stage: serverlnx
      language: java
      services:
        - docker
      # jdk: openjdk11
      os: linux
      #    #skips default install - see script bellow
      install: true

      before_install:
        - pip install awscli --upgrade --user
        - ./ecr_credentials.sh >/dev/null 2>&1
        - source ./prepare_jdk.sh
        - sudo apt-get install fakeroot
      script:
        - mkdir -p ~/$TRAVIS_BUILD_NUMBER
        - aws s3 sync $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER >/dev/null 2>&1
        - rm -rf $TRAVIS_BUILD_DIR/src/main/resources/app/*
        - cp -R -f ~/$TRAVIS_BUILD_NUMBER/www/* $TRAVIS_BUILD_DIR/src/main/resources/app
        - mvn clean package -q -DskipTest=true #deploy --settings deploy-settings.xml -Daws_default_region=eu-west-1
        - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.* $TRAVIS_BUILD_DIR/outputs/$OS/
      after_success:
        - aws s3 cp --recursive $TRAVIS_BUILD_DIR/outputs/ $S3_BUCKET_PUBLIC/ >/dev/null 2>&1
        - rm -rf docker/libs
        - mkdir docker/libs
        - cp target/dependency/*.jar docker/libs/
        - cp target/*.jar docker/
        - rm docker/libs/javafx*.jar
        - rm docker/*-app.jar
        - export COMMIT=${TRAVIS_COMMIT::7}
        - export COMMIT_TAG=$(echo $TRAVIS_BRANCH-$COMMIT | tr "/" ".")
        - export TAG=`if [ ! -z "$TRAVIS_TAG" ]; then echo "$TRAVIS_TAG"; else echo "$COMMIT_TAG";
          fi`
        - echo "$DOCKER_ACCESSTOKEN" | docker login -u "$DOCKER_USER" --password-stdin  >/dev/null 2>&1
        - docker build ./docker -t $IMAGE_NAME:latest
        - docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TAG
        - docker push $IMAGE_NAME:latest
        - docker push $IMAGE_NAME:$TAG
        - echo "$IMAGE_NAME:$TAG is built properly and pushed to Dockerhub"

    - stage: serverwin
      os: windows
      env:
        - OS=Win64
      language: sh
      #    #skips default install - see script bellow
      install: true
      before_install:
        - choco install awscli -y --version 1.16.92 # --params "'-b:${TRAVIS_BUILD_DIR}/aws'"
        - choco install maven -y --version 3.6.1
        # - choco install adoptopenjdk -y --version 11.28 # 11.0.2.9
        #      - choco install openjdk -y #--version 11.0.1
        - source ./prepare_jdk.sh
        - choco install nuget.commandline -y
        - nuget install WiX -Version 3.11.1 -NonInteractive # https://travis-ci.community/t/unable-to-install-wix-toolset/1071
        - ./ecr_credentials.sh >/dev/null 2>&1
        - export AWS_HOME="C:\Program Files\Amazon\AWSCLI"
        - export MAVEN_HOME="C:/ProgramData/chocolatey/lib/maven"
        - export WiX_HOME="${TRAVIS_BUILD_DIR}/WiX.3.11.1"
        - export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${WiX_HOME}/tools:${AWS_HOME}:$PATH
        - powershell refreshenv
        - RefreshEnv.cmd
        - mvn -version
        - aws --version
        - java -Xmx32m -version
        - javac -J-Xmx32m -version
      script:
        - mkdir -p ~/$TRAVIS_BUILD_NUMBER
        - aws s3 sync $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER ~/$TRAVIS_BUILD_NUMBER >/dev/null 2>&1
        - rm -rf $TRAVIS_BUILD_DIR/src/main/resources/app/*
        - cp -R -f ~/$TRAVIS_BUILD_NUMBER/www/* $TRAVIS_BUILD_DIR/src/main/resources/app
        - mvn clean package -q -DskipTest=true -DOS=$OS
        - cp -f $TRAVIS_BUILD_DIR/target/$OS/*.* $TRAVIS_BUILD_DIR/outputs/$OS/
      after_success:
        - aws s3 cp --recursive $TRAVIS_BUILD_DIR/outputs/ $S3_BUCKET_PUBLIC/ >/dev/null 2>&1
        - aws s3 rm --recursive $S3_BUCKET_CACHE/$TRAVIS_BUILD_NUMBER  >/dev/null 2>&1 # clean up after ourselves

        #deploy: #actually, deploy is managed by maven wagon
        #   # deploy build to s3
        #   - provider: s3
        #     access_key_id: $aws_user
        #     secret_access_key: $aws_accesskey
        #     region: "eu-west-1"
        #     bucket: "rs-travis"
        #     local_dir: $TRAVIS_BUILD_DIR/outputs
        #     upload_dir: kutuapp
        #     skip_cleanup: true
        #     on:
        #       all_branches: true

      #   - provider: releases
      #     api_key: $GH_ACCESS_TOKEN
      #     file_glob: true
      #     file: $TRAVIS_BUILD_DIR/src/main/resources/app
      #     skip_cleanup: true
      #     on:
      #       all_branches: true
      #   #   on:
      #   #     tags: true
      #  provider: releases
      #  api_key: $GH_ACCESS_TOKEN
      #  file_glob: true
      #  file: $TRAVIS_BUILD_DIR/target/${OS}/*
      #  skip_cleanup: true
      #  on:
#    tags: true